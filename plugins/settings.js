const config = require('../config')
const {cmd , commands} = require('../command')
const os = require("os")

cmd({
    pattern: "settings",
    alias: ["setting"],
    desc: "settings the bot",
    category: "owner",
    react: "‚öô",
    filename: __filename


},
async (conn, mek, m, { from, isOwner, quoted, reply }) => {
    if (!isOwner) return reply("‚ùå You are not the owner!");
    try {
        let desc = `* _ùë∏ùëºùë¨ùë¨ùëµ ùëπùë®ùë∫ùëØùëº ùë¥ùë´ ùë∫ùë¨ùëªùëªùë∞ùëµùëÆùë∫_


‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùó™ùó¢ùó•ùóû ùó†ùó¢ùóóùóò ‚ú®*
> *1Ô∏è‚É£.1Ô∏è‚É£  Public Work*
> *1Ô∏è‚É£.2Ô∏è‚É£  Private Work*
> *1Ô∏è‚É£.3Ô∏è‚É£  Group Only*
> *1Ô∏è‚É£.4Ô∏è‚É£  Inbox Only*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùóîùó®ùóßùó¢ ùó©ùó¢ùóúùóñùóò ‚ú®*
> *2Ô∏è‚É£.1Ô∏è‚É£ Auto Voice On*
> *2Ô∏è‚É£.2Ô∏è‚É£ Auto Voice Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùóîùó®ùóßùó¢ ùó¶ùóßùóîùóßùó®ùó¶ ùó¶ùóòùóòùó° ‚ú®*
> *3Ô∏è‚É£.1Ô∏è‚É£ Auto Read Status On*
> *3Ô∏è‚É£.2Ô∏è‚É£ Auto Read Status Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùóîùó®ùóßùó¢ ùó¶ùóßùóúùóñùóûùóòùó• ‚ú®*
> *4Ô∏è‚É£.1Ô∏è‚É£ Auto sticker On*
> *4Ô∏è‚É£.2Ô∏è‚É£ Auto sticker Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùóîùó®ùóßùó¢ ùó•ùóòùó£ùóüùó¨‚ú®*
> *5Ô∏è‚É£.1Ô∏è‚É£ Auto reply On*
> *5Ô∏è‚É£.2Ô∏è‚É£ Auto reply Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùóïùó¢ùóß ùó¢ùó°ùóüùóúùó°ùóò ùó¢ùóôùóôùóüùóúùó°ùóò ‚ú®*
> *6Ô∏è‚É£.1Ô∏è‚É£ Online On*
> *6Ô∏è‚É£.2Ô∏è‚É£ Online Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùó†ùó¶ùóö ùó•ùóòùóîùóó ‚ú®*
> *7Ô∏è‚É£.1Ô∏è‚É£ Read Msg On*
> *7Ô∏è‚É£.2Ô∏è‚É£ Read Msg Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùó†ùó¶ùóö ùó•ùóòùóîùóñùóß ‚ú®*
> *8Ô∏è‚É£.1Ô∏è‚É£ Auto React On*
> *8Ô∏è‚É£.2Ô∏è‚É£ Auto React Off*
‚ï≠‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã
‚î£‚îÅ *ùóîùó°ùóßùóú ùóüùóúùó°ùóû ‚ú®*
> *9Ô∏è‚É£.1Ô∏è‚É£ Anti Link On*
> *9Ô∏è‚É£.2Ô∏è‚É£ Anti Link Off*
> *9Ô∏è‚É£.3Ô∏è‚É£ Anti Link Remove*
‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚óã


* *üî¢ Reply Below This Number Change To QUEEN-TASHU-MD Bot Change Setting*

> *¬© ùôøùôæùöÜùô¥ùô∞ùöÅùô≥ ùô±ùöà ùöÄùöÑùô¥ùô¥ùôΩ ùöÅùô∞ùöÇùô∑ùöÑ ùôºùô≥ ‚úæ*`;

        const vv = await conn.sendMessage(from, { image: { url: "https://i.ibb.co/BsjkCDP/9555.jpg"}, caption: desc }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1.1':
                        reply(".update MODE:public" );
                        break;
                    case '1.2':               
                        reply(".update MODE:private");
                        break;
                    case '1.3':               
                          reply(".update MODE:group");
                      break;
                    case '1.4':     
                        reply(".update MODE:inbox");
                      break;
                    case '2.1':     
                        reply(".update AUTO_VOICE:true");
                        break;
                    case '2.2':     
                        reply(".update AUTO_VOICE:false");
                    break;
                    case '3.1':    
                        reply(".update AUTO_READ_STATUS:true");
                    break;
                    case '3.2':    
                        reply(".update AUTO_READ_STATUS:false");
                    break;                    
                    case '4.1':    
                        reply(".update AUTO_STICKER:true");
                    break;
                    case '4.2':    
                        reply(".update AUTO_STICKER:false");
                    break;                                        
                    case '5.1':    
                        reply(".update AUTO_REPLY:true");
                    break;
                    case '5.2':    
                        reply(".update AUTO_REPLY:false");
                    break;                        
                    case '6.1':    
                        reply(".update ALLWAYS_OFFLINE:true");
                    break; 
                    case '6.2':    
                        reply(".update ALLWAYS_OFFLINE:false");
                    break;                       
                    case '7.1':    
                        reply(".update READ_MESSAGE:true");
                    break;
                    case '7.2':    
                        reply(".update READ_MESSAGE:false");
                    break;
                    case '8.1':    
                        reply(".update config.AUTO_REACT:true");
                    break;
                    case '8.2':    
                        reply(".update config.AUTO_REACT:false");
                    break;
                    case '9.1':    
                        reply(".update ANTI_LINK:true");
                        reply(".update ANTI_LINKK:false");
                    break;
                    case '9.2':    
                        reply(".update ANTI_LINKK:true");
                        reply(".update ANTI_LINK:false");
                    break;
                    case '9.3':    
                        reply(".update ANTI_LINK:false");
                        reply(".update ANTI_LINKK:false");
                    break;
                    default:
                        reply("Invalid option. Please select a valid optionüî¥");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});
